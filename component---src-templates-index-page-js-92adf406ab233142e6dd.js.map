{"version":3,"sources":["webpack:///./src/templates/index-page.js","webpack:///./src/components/BlogRoll.js"],"names":["__webpack_require__","r","__webpack_exports__","d","IndexPageTemplate","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","_components_Features__WEBPACK_IMPORTED_MODULE_4__","_components_BlogRoll__WEBPACK_IMPORTED_MODULE_5__","_ref","image","heading","title","mainpitch","subheading","description","intro","a","createElement","className","style","backgroundImage","childImageSharp","fluid","src","backgroundPosition","backgroundAttachment","display","height","lineHeight","justifyContent","alignItems","flexDirection","gridItems","blurbs","to","propTypes","PropTypes","oneOfType","object","string","shape","array","IndexPage","_ref2","frontmatter","data","markdownRemark","BlogRoll","render","posts","this","props","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_2___default","map","post","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_4__","fields","slug","date","excerpt","React","Component","query","count","_public_static_d_1748157918_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-index-page-js-92adf406ab233142e6dd.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport Features from '../components/Features'\nimport BlogRoll from '../components/BlogRoll'\n\nexport const IndexPageTemplate = ({\n  image,\n  title,\n  heading,\n  subheading,\n  mainpitch,\n  description,\n  intro,\n}) => (\n  <div>\n    <div\n      className=\"full-width-image margin-top-0\"\n      style={{\n        backgroundImage: `url(${\n          !!image.childImageSharp ? image.childImageSharp.fluid.src : image\n        })`,\n        backgroundPosition: `top left`,\n        backgroundAttachment: `fixed`,\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          height: '150px',\n          lineHeight: '1',\n          justifyContent: 'space-around',\n          alignItems: 'left',\n          flexDirection: 'column',\n        }}\n      >\n\n      </div>\n    </div>\n    <section className=\"section section--gradient\">\n      <div className=\"container\">\n        <div className=\"section\">\n          <div className=\"columns\">\n            <div className=\"column is-10 is-offset-1\">\n              <div className=\"content\">\n                <div className=\"content\">\n                  <div className=\"tile\">\n                    <h1 className=\"title\">{mainpitch.title}</h1>\n                  </div>\n                  <div className=\"tile\">\n                    <h3 className=\"subtitle\">{mainpitch.description}</h3>\n                  </div>\n                </div>\n                <div className=\"columns\">\n                  <div className=\"column is-12\">\n                    <h3 className=\"has-text-weight-semibold is-size-2\">\n                      {heading}\n                    </h3>\n                    <p>{description}</p>\n                  </div>\n                </div>\n                <Features gridItems={intro.blurbs} />\n                <div className=\"columns\">\n                  <div className=\"column is-12 has-text-centered\">\n                    <Link className=\"btn\" to=\"/technologies\">\n                      See all products\n                    </Link>\n                  </div>\n                </div>\n                <div className=\"column is-12\">\n                  <h3 className=\"has-text-weight-semibold is-size-2\">\n                    Latest stories\n                  </h3>\n                  <BlogRoll />\n                  <div className=\"column is-12 has-text-centered\">\n                    <Link className=\"btn\" to=\"/blog\">\n                      Read more\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n)\n\nIndexPageTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  heading: PropTypes.string,\n  subheading: PropTypes.string,\n  mainpitch: PropTypes.object,\n  description: PropTypes.string,\n  intro: PropTypes.shape({\n    blurbs: PropTypes.array,\n  }),\n}\n\nconst IndexPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark\n\n  return (\n    <Layout>\n      <IndexPageTemplate\n        image={frontmatter.image}\n        title={frontmatter.title}\n        heading={frontmatter.heading}\n        subheading={frontmatter.subheading}\n        mainpitch={frontmatter.mainpitch}\n        description={frontmatter.description}\n        intro={frontmatter.intro}\n      />\n    </Layout>\n  )\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexPageTemplate {\n    markdownRemark(frontmatter: { templateKey: { eq: \"index-page\" } }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        heading\n        subheading\n        mainpitch {\n          title\n          description\n        }\n        description\n        intro {\n          blurbs {\n            image {\n              childImageSharp {\n                fluid(maxWidth: 240, quality: 64) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            text\n          }\n          heading\n          description\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql, StaticQuery } from 'gatsby'\n\nclass BlogRoll extends React.Component {\n  render() {\n    const { data } = this.props\n    const { edges: posts } = data.allMarkdownRemark\n\n    return (\n      <div className=\"columns is-multiline\">\n        {posts &&\n          posts.map(({ node: post }) => (\n            <div className=\"is-parent column is-6\" key={post.id}>\n              <article className=\"tile is-child box notification\">\n                <p>\n                  <Link\n                    className=\"title has-text-primary is-size-4\"\n                    to={post.fields.slug}\n                  >\n                    {post.frontmatter.title}\n                  </Link>\n                  <span> &bull; </span>\n                  <span className=\"subtitle is-size-5 is-block\">\n                    {post.frontmatter.date}\n                  </span>\n                </p>\n                <p>\n                  {post.excerpt}\n                  <br />\n                  <br />\n                  <Link className=\"button\" to={post.fields.slug}>\n                    Keep Reading →\n                  </Link>\n                </p>\n              </article>\n            </div>\n          ))}\n      </div>\n    )\n  }\n}\n\nBlogRoll.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query BlogRollQuery {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n          filter: { frontmatter: { templateKey: { eq: \"use-case\" } } }\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 400)\n              id\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n                templateKey\n                date(formatString: \"MMMM DD, YYYY\")\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data, count) => <BlogRoll data={data} count={count} />}\n  />\n)\n"],"sourceRoot":""}