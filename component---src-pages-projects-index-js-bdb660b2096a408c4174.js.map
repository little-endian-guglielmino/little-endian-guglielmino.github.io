{"version":3,"sources":["webpack:///./src/pages/projects/index.js","webpack:///./src/components/BlogRoll.js"],"names":["BlogIndexPage","render","className","style","backgroundImage","boxShadow","color","padding","React","Component","BlogRoll","posts","this","props","data","allMarkdownRemark","edges","map","post","node","key","id","to","fields","slug","frontmatter","title","date","excerpt","query","count"],"mappings":"soEAKqBA,E,gLACnBC,OAAA,WACE,OACE,kBAAC,IAAD,KACE,yBACEC,UAAU,0CACVC,MAAO,CACLC,gBAAgB,mCAIlB,wBACEF,UAAU,iCACVC,MAAO,CACLE,UAAW,4BAEXC,MAAO,UACPC,QAAS,SANb,aAWF,6BAASL,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,kBAAC,IAAD,W,GAzB6BM,IAAMC,Y,yFCD3CC,E,gLACJT,OAAA,WAAU,IAEOU,EADEC,KAAKC,MAAdC,KACsBC,kBAAtBC,MAER,OACE,yBAAKd,UAAU,wBACZS,GACCA,EAAMM,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACR,yBAAKjB,UAAU,wBAAwBkB,IAAKF,EAAKG,IAC/C,6BAASnB,UAAU,kCACjB,2BACE,kBAAC,IAAD,CACEA,UAAU,mCACVoB,GAAIJ,EAAKK,OAAOC,MAEfN,EAAKO,YAAYC,OAEpB,qCACA,0BAAMxB,UAAU,+BACbgB,EAAKO,YAAYE,OAGtB,2BACGT,EAAKU,QACN,6BACA,6BACA,kBAAC,IAAD,CAAM1B,UAAU,SAASoB,GAAIJ,EAAKK,OAAOC,MAAzC,0B,GA3BKhB,IAAMC,WA+Cd,sBACb,kBAAC,IAAD,CACEoB,MAAK,aAuBL5B,OAAQ,SAACa,EAAMgB,GAAP,OAAiB,kBAACpB,EAAD,CAAUI,KAAMA,EAAMgB,MAAOA,KAxBxD","file":"component---src-pages-projects-index-js-bdb660b2096a408c4174.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../../components/Layout'\nimport BlogRoll from '../../components/BlogRoll'\n\nexport default class BlogIndexPage extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <div\n          className=\"full-width-image-container margin-top-0\"\n          style={{\n            backgroundImage: `url('/img/projects-index.jpg')`,\n            \n          }}\n        >\n          <h1\n            className=\"has-text-weight-bold is-size-1\"\n            style={{\n              boxShadow: '0.5rem 0 0 , -0.5rem 0 0 ',\n    \n              color: '#e85100',\n              padding: '1rem',\n            }}>\n            Projects\n          </h1>\n        </div>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <BlogRoll />\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql, StaticQuery } from 'gatsby'\n\nclass BlogRoll extends React.Component {\n  render() {\n    const { data } = this.props\n    const { edges: posts } = data.allMarkdownRemark\n\n    return (\n      <div className=\"columns is-multiline\">\n        {posts &&\n          posts.map(({ node: post }) => (\n            <div className=\"is-parent column is-6\" key={post.id}>\n              <article className=\"tile is-child box notification\">\n                <p>\n                  <Link\n                    className=\"title has-text-primary is-size-4\"\n                    to={post.fields.slug}\n                  >\n                    {post.frontmatter.title}\n                  </Link>\n                  <span> &bull; </span>\n                  <span className=\"subtitle is-size-5 is-block\">\n                    {post.frontmatter.date}\n                  </span>\n                </p>\n                <p>\n                  {post.excerpt}\n                  <br />\n                  <br />\n                  <Link className=\"button\" to={post.fields.slug}>\n                    Keep Reading â†’\n                  </Link>\n                </p>\n              </article>\n            </div>\n          ))}\n      </div>\n    )\n  }\n}\n\nBlogRoll.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query BlogRollQuery {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n          filter: { frontmatter: { templateKey: { eq: \"project\" } } }\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 400)\n              id\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n                templateKey\n                date(formatString: \"MMMM DD, YYYY\")\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data, count) => <BlogRoll data={data} count={count} />}\n  />\n)\n"],"sourceRoot":""}